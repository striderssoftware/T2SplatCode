
This document pertains to this branch:
https://github.com/striderssoftware/MFM.git

Here is a link to first boot video:
https://www.youtube.com/watch?v=ado3UpO7Sgw

--------
Startup:
Plug it in.

--------
General:
I found the tile to be much more robust then I had imagined. I could toss this accross the room to somebody.

The Hardware is facinating and I am not a hardware person.

It makes me want to go back and watch the early videos.


------------
Connections:
Power: The ITC-PI connector can go on any of the six ITC connections.
be careful to get the keying correct and get it seated properly.

I used the spot below the NE corner.

---------
Ethernet:
RJ45 was connected before boot.

----
SSH:
Made a SSH connection with
SecureCRT
Looked at my DHCP table to find the ip.

Logged in and got a shell

-------
Serial:
Made a serial connection with
SecureCRT
same settings as to a Rasberry Pi
Logged in and got a shell

---------
Shutdown:
I use sudo shutdown -h now
Power down running with seeds
and events processing - fine.

----
SDL:
Both SDL and SDL2 are installed on the Tile (Beagle Bone)
ls /usr/include/SDL
SDL/  SDL2/

Note: Any package dependencies found during the SDL2 port have already been added here. 

Install:
sudo apt-get update
sudo apt-get install libsdl2-2.0 --fix-missing
sudo apt-get install libsdl2-dev 
sudo apt-get install libsdl2-image-dev
sudo apt-get install libsdl2-ttf-dev
These packages ( and dependencies ) were installed:
libsdl2-2.0, libsdl2-dev, libsdl2-image-dev, libsdl2-ttf-dev


Install commands:
sudo apt-get update
sudo apt-get install libsdl2-2.0 --fix-missing libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev

------
SPACE:
it is pretty limited:

t2@beaglebone:~$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            214M     0  214M   0% /dev
tmpfs            49M  1.6M   47M   4% /run
/dev/mmcblk1p1  3.5G  3.0G  272M  92% /
tmpfs           242M     0  242M   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           242M     0  242M   0% /sys/fs/cgroup
tmpfs            49M     0   49M   0% /run/user/1001

After SDL instal of libsdl2-2.0 and libsdl2-dev
t2@beaglebone:~$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            214M     0  214M   0% /dev
tmpfs            49M  2.2M   47M   5% /run
/dev/mmcblk1p1  3.5G  3.1G  151M  96% /
tmpfs           242M     0  242M   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           242M     0  242M   0% /sys/fs/cgroup
tmpfs            49M     0   49M   0% /run/user/1001
t2@beaglebone:~$

272M  to 151M  Free

-----
LIBS for SDL2 work:
MFM/src/drivers/mfmt2/

---------
Building:

The basic build is
cd /home/t2/MFM;
make.

The startup scripts look for MFMT2 in
/home/t2/MFM/bin

kicked a build at 1:40
it was done at: 2:54

Question:
if
/home/t2/MFM/bin
has no files in it (MFMT2)
or has a MFMT2 that will not start.
what would happen at startup??
Answer:
serial or ssh connections will work,
and cdm would be running

----------
Branch:
the head repo URL is:
https://github.com/DaveAckley/MFM.git

03/19/2021
On this date the Head repo was merged into my branch.

-------------
Code Changes:

The actual port of mfmt2 to SDL2.

This commit started the SDL2 Port of mfmt2:
76d9a1022d4078a46046c9bc7cc8dc3b36dd7246
Headers were changed.
creating screens and windows was changed.
Then commits with more Makefile and header changes.

and then...

-- error ------
In file included from include/../../aui/include/Audio.h:18,
                 from include/EventWindow.h:42,
                 from include/EventHistoryBuffer.tcc:4,
                 from include/EventHistoryBuffer.h:386,
                 from include/CacheProcessor.tcc:5,
                 from include/CacheProcessor.h:547,
                 from include/PacketIO.tcc:3,
                 from include/PacketIO.h:80,
                 from src/ChannelEnd.cpp:2:
include/../../aui/include/Synth.h:5:10: fatal error: SDL2/SDL_ttf.h: No such file or directory
 #include <SDL2/SDL_ttf.h>

-- fix -----
/usr/include/SDL2/ was missing
SDL_ttf.h
ran
sudo apt-get install libsdl-ttf2.0-dev --fix-missing
that did not fix it.

Hand copied a SDL_tff.h from my ubuntu VM.
That fixed those errors.

Note: Correctly fixed by installing (libsdl2-ttf-dev)

--- error ----
misiing a package
------ fix ----
libsdl2-image-dev
was installed
--------------

--- error ----
This file:
MFM/src/core/src/Fail.cpp
fails because of the "extern "C" {"
block/statement.

src/Fail.cpp:1:1: note: ‚Äòextern "C"‚Äô linkage started here
 extern "C" {

------ fix ----
ifdef std11 on platform:
In:
config/Makvars.mk
ifneq ($(PLATFORM),tile)
 COMMON_CPPFLAGS+= -std=c++11
endif
 
---- error -----
UlamElement.tcc:42:33: error: ‚ÄòAudioState‚Äô is not a class or namespace

--- fix -----
Extend the ifdef's around NOT building the AUI lib


---- error -----
getting expected errors in mfmt2 about SDL2

--- fix -----
knocking those off one by one.

---- error -----
g++ -Wl,--fatal-warnings -pthread -Wl,--fatal-warnings -pthread -rdynamic ../../../build/mfmt2/mfmt2.o -L ../../../build/mfmt2 -L ../../../build/core/ -L ../../../build/elements/ -L ../../../build/sim -L ../../../build/gui/ -L /home/t2/T2-12/base/apps/tnv -L ../../../build/t2lib -lmfmmfmt2 -lmfmt2lib -lt2adc -lmfmgui -lmfmsim -Wl,--whole-archive -lmfmcore -Wl,--no-whole-archive -lSDL2 -lSDL2_ttf -lSDL2_image -lpng -lm -lrt -ldl -lrt -ldl -L ../../../build/platform-tile -l mfmplatform-tile -l mfmcore  -o ../../../bin/mfmt2
/usr/bin/ld: cannot find -lSDL2_ttf
collect2: error: ld returned 1 exit status

--- fix ------
This is probobly related to the "hand copying" of the SDL_ttf.h
I will retry to install the
libsdl-ttf2.0-dev package.


Installed: libsdl2-ttf-dev
instead of or in addition to libsdl-ttf2.0-dev 

**** Successfull build on the T2 Tile ****

----Runtime --errors ----
pr 17 22:57:16 beaglebone mfm.sh[1814]: 15: MSG: SDL early startup
Apr 17 22:57:16 beaglebone mfm.sh[1814]: 16: ERR: SDL_Init(0x21) failed: fbcon not available
Apr 17 22:57:16 beaglebone mfm.sh[1814]: src/SDLI.cpp:228: FAILED: ILLEGAL_STATE
Apr 17 22:57:16 beaglebone mfm.sh[1814]: Failed out of main

---- Latest --------
I have two small SDL test apps,
one SDL
one SDL2

Both run succesfully in an Ubuntu VM.

--on the tile--
The SDL app runs fine as root
if I run as non root I get:
SDL_Init Error
Unable to open a console terminal

the SDL2 app fails with:
ERR: SDL_Init(0x21) failed: fbcon not available

or if SDL_VIDEODRIVER is not defined (should try all available formats):
SDL_Init Error
No available video device 


sudo lshw -c video
gives no video info.

I need to find out the touchscreen
video information.

I need to find out if the SDL
on the TIle was built/configured with particular
Video driver support.


SDL2 no longer has a target (support for)
for File Buffer usage i.e.
AC_DEFINE(SDL_VIDEO_RENDER_DIRECTFB, 1, [ ])

--- possible fix ------
Use SDL2 with the DirectFB package.
https://github.com/deniskropp
GNU LESSER GENERAL PUBLIC LICENSE

(needed to install)
libtool

Building these Repos:
https://github.com/deniskropp/flux.git
https://github.com/deniskropp/DirectFB.git
https://github.com/libsdl-org/SDL.git

--- SPACE FIX: to build these Repos on the Tile more space was needed ---
Removed the case from the Tile, placed an SD card in it.
(had to use a 32 gig - larger SD cards fail with no ExFat/ext4 support)

- Here is the /etc/fstab -

# /etc/fstab: static file system information    
/dev/mmcblk1p1  /  ext4  noatime,errors=remount-ro  0  1
debugfs  /sys/kernel/debug  debugfs  defaults  0  0
# 60A8-CEA3 /striderSD  ext4 defaults 0  2    
/dev/mmcblk0p1 /media/mySDCard auto defaults  0 2

----


DirectFB compile fails with:


make[4]: Entering directory '/media/mySDCard/DirectFB/lib/direct'
  CXX      Base.lo
In file included from /usr/include/c++/8/bits/stl_algobase.h:63,
                 from /usr/include/c++/8/bits/stl_tree.h:63,
                 from /usr/include/c++/8/map:60,
                 from ../../lib/direct/Types++.h:41,
                 from ./string.h:37,
                 from ../../lib/direct/os/linux/glibc/types.h:43,
                 from ../../lib/direct/os/types.h:47,
                 from ../../lib/direct/os/clock.h:36,
                 from ../../lib/direct/clock.h:36,
                 from ../../lib/direct/debug.h:38,
                 from Base.cpp:39:
/usr/include/c++/8/ext/numeric_traits.h:54:3: error: template with C linkage
   template<typename _Value>
   ^~~~~~~~
Base.cpp:38:1: note: ‚Äòextern "C"‚Äô linkage started here
 extern "C" {


