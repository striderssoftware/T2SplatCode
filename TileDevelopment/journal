
Here is a link to first boot video:
https://www.youtube.com/watch?v=ado3UpO7Sgw

--------
Startup:
Plug it in.

--------
General:
I found the tile to be much more robust then I had imagined. I could toss this accross the room to somebody.

The Hardware is facinating and I am not a hardware person.

It makes me want to go back and watch the early videos.


------------
Connections:
Power: The ITC-PI connector can go on any of the six ITC connections.
be careful to get the keying correct and get it seated properly.

I used the spot below the NE corner.

---------
Ethernet:
RJ45 was connected before boot.

----
SSH:
Made a SSH connection with
SecureCRT
Looked at my DHCP table to find the ip.

Logged in and got a shell


-------
Serial:
Made a serial connection with
SecureCRT
same settings as to a Rasberry Pi
Logged in and got a shell

---------
Shutdown:
I use sudo shutdown -h now
Power down running with seeds
and events processing - fine.

----
SDL:
Both SDL and SDL2 are installed on the Tile (Beagle Bone)
ls /usr/include/SDL
SDL/  SDL2/

Install:
sudo apt-get update
sudo apt-get install libsdl2-2.0 --fix-missing
sudo apt-get install libsdl2-dev 
sudo apt install libsdl2-image-dev

These packages ( and dependencies ) were installed:
libsdl2-2.0, libsdl2-dev, libsdl2-image-dev

------
SPACE:
it is pretty limited:

t2@beaglebone:~$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            214M     0  214M   0% /dev
tmpfs            49M  1.6M   47M   4% /run
/dev/mmcblk1p1  3.5G  3.0G  272M  92% /
tmpfs           242M     0  242M   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           242M     0  242M   0% /sys/fs/cgroup
tmpfs            49M     0   49M   0% /run/user/1001

After SDL instal of libsdl2-2.0 and libsdl2-dev
t2@beaglebone:~$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            214M     0  214M   0% /dev
tmpfs            49M  2.2M   47M   5% /run
/dev/mmcblk1p1  3.5G  3.1G  151M  96% /
tmpfs           242M     0  242M   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           242M     0  242M   0% /sys/fs/cgroup
tmpfs            49M     0   49M   0% /run/user/1001
t2@beaglebone:~$

272M  to 151M  Free

-----
LIBS for SDL2 work:
MFM/src/drivers/mfmt2/

---------
Building:

The basic build is
cd /home/t2/MFM;
make.

The startup scripts look for MFMT2 in
/home/t2/MFM/bin

kicked a build at 1:40
it was done at: 2:54

Question:
if
/home/t2/MFM/bin
has no files in it (MFMT2)
or has a MFMT2 that will not start.
what would happen at startup??
Answer:
serial or ssh connections will work,
and cdm would be running

----------
Branch:
the head repo URL is:
https://github.com/DaveAckley/MFM.git

03/19/2021
On this date the Head repo was merged into my branch.

----------
Code Changes:

I have checked in a first pass
all the headers were changed.
creating screens and windows was changed.

----------
The actual port to SDL2.

-- error ------
In file included from include/../../aui/include/Audio.h:18,
                 from include/EventWindow.h:42,
                 from include/EventHistoryBuffer.tcc:4,
                 from include/EventHistoryBuffer.h:386,
                 from include/CacheProcessor.tcc:5,
                 from include/CacheProcessor.h:547,
                 from include/PacketIO.tcc:3,
                 from include/PacketIO.h:80,
                 from src/ChannelEnd.cpp:2:
include/../../aui/include/Synth.h:5:10: fatal error: SDL2/SDL_ttf.h: No such file or directory
 #include <SDL2/SDL_ttf.h>

-- fix -----
/usr/include/SDL2/ was missing
SDL_ttf.h
ran
sudo apt-get install libsdl-ttf2.0-dev --fix-missing
that did not fix it.

Hand copied a SDL_tff.h from my ubuntu VM.

That fixed those errors.


--- error ----
misiing a package
------ fix ----
libsdl2-image-dev
was installed
--------------

--- error ----
This file:
MFM/src/core/src/Fail.cpp
fails because of the "extern "C" {"
block/statement.

src/Fail.cpp:1:1: note: ‚Äòextern "C"‚Äô linkage started here
 extern "C" {

------ fix ----
ifdef std11 on platform:
In:
config/Makvars.mk
ifneq ($(PLATFORM),tile)
 COMMON_CPPFLAGS+= -std=c++11
endif
 
---- error -----
UlamElement.tcc:42:33: error: ‚ÄòAudioState‚Äô is not a class or namespace

--- fix -----
Extend the ifdef's around NOT building the AUI lib


---- error -----
getting expected errors in mfmt2 about SDL2

--- fix -----
knocking those off one by one.









